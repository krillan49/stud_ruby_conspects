puts '                                          RVM и Ruby под Linux'

# https://rvm.io/

# https://www.youtube.com/watch?v=R4LNZSshzqE     -  гайд по установке

# !!! На RVM болт забили, потому лучше перейти на 1 из:
# rbenv - еще один версион менеджер
# asdf - еще один версион менеджер


# rvm (ruby version manager) - удобный инструмент, который позволяет установить много различных версий Руби и позволяет переключаться между ними, когда это необходимо.

# Rvm - это надстройка для вашей оболочки (shell), которой может являться или bash, или zsh, или что-то еще (например, RubyMine).

# rvm - это просто сложный Bash Shell скрипт, содержащий фунцию с командами

# Можно использовать только на *nix системах



puts '                                      Установка дополнительных утилит'

# Перед тем как поставить RVM нужно поставить дополнительные утилиты:

# 1. Установим менеджер пакетов curl, командную утилиту, которая облегчает скачивание фаилов из командной строки:
# $ sudo apt-get install curl       -  стандартным способом
# $ sudo aptitude install curl      -  либо с помощью менеджера пакетов aptitude

# 2. Установим еще набор различных вспомогательных пакетов для установки Руби, RVM, Heroku итд
# $ sudo apt-get install git-core build-essential libgdbm-dev libncurses5-dev automake libtool bison libffi-dev nodejs



puts '                                             Установка RVM'

# Для установки rvm по очереди выполняем команды, что перечислены в пункте "Cut Rubies with ease!" на https://rvm.io/, если что-то пойдет не так на сайте могут быть подсказки


# 1. Install GPG keys - Добавим необходимые ключи в нашу систему:
# $ gpg2 --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
# Если возникли какие-то проблемы можно использовать другой сервер ключей, будет та же самая команда, только с другим адресом, например hkp:keys.gnupg.net вместо keyserver.ubuntu.com


# 2a. Install RVM - при помощи curl скачаем дистрибутив, распакуем и запустим в работу. Лучше использовать ее и устанавливать Рэилс отдельно:
# $ \curl -sSL https://get.rvm.io | bash -s stable
# Выдаст предупреждения про подписи которые не принадлежат владельцу итд - похер

# 2b. For installing RVM with default Ruby and Rails in one command, run - тоже что и выше, но дополнительно установит и Рэилс:
# $ \curl -sSL https://get.rvm.io | bash -s stable --rails


# Поле установки, чтобы rvm работал, нужно перелогиниться в системе, тк rvm изначально выполняется в фаиле .bash_profile, который выполняется при первом логине в этой сессии в систему
# Либо можно настроить терминал - в настройках терминала в нашем профиле в меню Команда/Command поставить галочку на пункте "Запускать команду как оболочку входа / Run command as a login shell". Тогда каждый новый терминал будет открываться как будто он логинится в систему и каждый раз будет выполняться фаил .bash_profile


# (?? не делал, хз зачем ?? небольшое дополнение для тех кто устанавливает Ruby на Linux:)
# После установки rvm и открытия окошка терминала (не забыв поставить галку run command as login shell (для гномовского баша, остальны как-то аналогично)), затем делаем команды
# rvm pkg install openssl
# rvm install ruby-2.7.6 --with-openssl-dir=$HOME/.rvm/usr



puts '                                          Использование RVM'

# Для каждой из версий Руби будет свой собственный отдельный набор гемов, тоесть при переключении версий Руби и все их гемы будут отдельными, что были установлены, пока была активна эта версия.

# Можно посмотреть куда rvm-скрипт прописался - откроем в нашей домашней дирректории фаил настроек оболочки Bash .bash_profile, он выполняется 1 раз при логине в систему, при первом логине в сессию оболочки
# $ vi .bash_profile            - тут на одной из строчек видно, что rvm прописал себя в этот фаил, тоесть прописал команды по загрузке содержимого своих фаилов, которое уже будет выполнять необходимые нам функции - установку и поддержку версий Руби

# $ type rvm                        - выведет весь исходный код скрипта с функией rvm

# $ rvm get stable                  - обновить rvm до актуальной версии

# $ rvm -v                          - версия rvm и инфа о владельцах ключей

# $ rvm list                        - выведет список всех версий Руби уже установленных в систему при помощи rvm
# $ rvm list known                  - выведет список всех версий Руби которые возможно установить при помощи rvm, этот список он хранит локально, а не берет из инета


# $ rvm install 3.1.2               - установка Руби версии 3.1.2. Скачает исходник и скомпилирует под нашу операционку, дополнительно подтянет и установит все необходимые дополнительные пакеты (может занять какое-то время). Вместе с Руби установится и менеджер пакетов и менеджер гемов и irb и все что соответсвует любому полноценному дистрибутиву Руби

# $ rvm remove 3.1.2                - удалить ненужную версию Руби

# $ ruby -v                         - проверяем текущую версию руби обычным способом
# $ gem -v                          - проверяем менеджер гемов обычным способом
# $ gem update --system             - обновляем менеджер гемов обычным способом

# $ rvm use 3.1.2                   - переключиться на использование Руби версии 3.1.2 в качестве текущей в окне терминала, тоесть в данной сессии нашего Bash

# $ rvm use 3.1.2 --default         - переключиться на использование Руби версии 3.1.2 в качестве текущей как дефолтной в любом новом окне терминала



puts '                                              gemset'

# С помощью gemset-ов можно использовать вместе разные версии Rails и Ruby. Это делается с помощью команды gem. Gemset-ы позволяют создавать полнофункциональные окружения для gem-ов, а также настраивать неограниченное количество окружений для каждой версии Ruby.

# $ rvm gemset create gemset_name     - create a gemset

# $ rvm ruby_version@gemset_name      - specify Ruby version and our new gemset














#
