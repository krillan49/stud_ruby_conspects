puts '                                           Менеджеры версий'

# Обновлять системный Руби сложно изза того, что операционных систем много и много версий этих ОС. Каждая ОС имеет свои настройки, которые оказывают влияние на производительность. Чтобы Руби использовал все эти возможности, необходимо собрать(build) этот язык на точно таком же компьютере (или на вашем собственном). Ведь даже на одинаковых операционных системах может отличаться тип процессора! А одна оптимизация на уровне процессора работает на одном компьютере, и не работает на другом.

# Можно было бы создадть директорию, в которой хранить все версии языка. Каждый руби назовем по-своему: ruby-2.5.1, ruby-2.3.3, и т.д. И вместо запуска "ruby app.rb" будем использовать "ruby-2.5.1 app.rb". Но помимо исполняемого файла ruby существует еще исполняемый файл gem ("which gem" чтобы посмотреть где этот исполняемый файл находится). При этом каждый gem имеет параметр, который называется required_ruby_-version. И gem для версии 2.5.1, не факт что будет работать для версии 2.3.3. Поэтому вместе с созданием директории для разных версий руби нам нужно еще создать директории для разных версий gem’ов, тоесть директорий этих получится дохерища.

# Программисты пришли к выводу, что должны быть способы проще. И родилась концепция «менеджера версий»



puts '                                         Разные менеджеры версий'

# rvm   - менежер версий для Руби
# rbenv - еще один версион менеджер для Руби

# Для других языков тоже существуют менеджеры версий. Например, для языка JavaScript существует NVM (Node.js Version Manager),  VirtualEnv для Python

# ASDF - универсальный версион менеджер, для многих языков одновременно
# https://asdf-vm.com/














#
