puts '                                              YAML'

# YAML  - (yet another markup language) формат хранения данных, вида ключ-значение. Проще чем JSON. Используется часто для хранения переводов, конфигурации и других не очень сложных и объемных данные.

# Расширения для фаилов YAML - .yml или .yaml
# Например тут будет фаил - 41_yaml.yml (описание синтаксиса там)


puts
puts '                                      Считывание YAML в Руби'

require 'yaml' # чтобы считывать фаилы YAML в руби нужно подгрузить встроенный модуль

# safe_load_file - метод безопасного(не пускает хак-код) чтения, загружает YAML фаил, обрабатывает и преобразует в обычный хэш или массив(если ключи верхнего уровня - элементы массива) хэшей
data = YAML.safe_load_file('41_yaml.yml', symbolize_names: true)
# 41_yaml.yml - имя(?относительный маршрут?) YAML фаила
# symbolize_names: true   - преобразует ключи в хэше в символы (по умолчанию ключи будут строками)

p data #=> { :key1=>"Value 1", :key2=>"Value 2", :hello=>"bye", :key3=>["K3value 1", "K3value 2", "K3value 3"] }
# Соотв далее можем пользоваться обычным хэшем с данными
p data[:key3] #=> ["K3value 1", "K3value 2", "K3value 3"]

# Ваариант вывода в виде массива из 2го примера в 41_yaml.yml
p data
#=> [
#      {:question=>"В какой стране придумали панамы?", :answers=>["Эквадор", "Панама", "Гондурас", "Канада"]},
#      {:question=>"Сколько лет длилась столетняя война?", :answers=>[116, 100, 101, 128]},
#      {:question=>"Что означает польское слово lustra?", :answers=>["Зеркало", "Люстра", "Стекло", "Ковёр"]}
# ]
p data[0][:question] #=> "В какой стране придумали панамы?"
















#
