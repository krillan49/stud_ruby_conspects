<h1>New article</h1>

<!--                                            Форма в Рэилс -->

<!-- Этот синтаксис Рэилс для формы не обязателен и можно просто писать HTML как в формах Синатры -->

<%= form_for :article, url: '/articles', data: {turbo:false} do |f| %> <!-- Тут именно с %= -->
  <!-- form_for - стандартный форм билдер, создает форму. Существуют разные форм билдеры(например для формы Бутсрапа), form_for используется не так часто, есть ещё форм билдер Simple form. Для этого подключается отдельный гем. -->
  <!-- :article - в единственном числе, что логично тк форма отправляет данные об одной сущности. В итоге если посмотреть код то будет создана форма:
    <form action="/articles/new" accept-charset="UTF-8" method="post">
      <input type="hidden" name="authenticity_token" value="DGyL-HHUE0zhY7jgWBY5d7ZK0YK8oNKBppIILnbIXqjMpuGinsvpiN-0DD78BX3siF5BJ6qYsRgsnOmkAZGbJQ" autocomplete="off" />
  -->
  <!-- url: '/articles' (url: articles_path - альтернатива, направняет на корневой URL контроллера те '/articles') - добавляем. Тк для URL "/articles/new", что у form_for :article по умолчанию, существует только GET-обработчик(new), потому при нажатии кнопки произойдет ошибка. Для POST используется экшен create c URL '/articles', соотв надо перенаправить форму на него. Теперь если посмотреть код то адрес в теге формы изменился:
    <form action="/articles" accept-charset="UTF-8" method="post">
  -->
  <!-- data: {turbo:false} - нужно дописать, если в /articles/new при нажатии на кнопку submit не происходит перенаправления на /articles. Форма опять изменилась: -->
    <!-- <form data-turbo="false" action="/articles" accept-charset="UTF-8" method="post">
  -->

  <!-- url: '/articles', data: {turbo:false}  - это и все дополнительное это хэш -->


  <!--                                      Поля формы в Рэилс -->

  <!-- https://guides.rubyonrails.org/form_helpers.html -->

  <p>
    <%= f.label :title %><br> <!-- <label for="article_title">Title</label> -->
      <!-- label - обозначение тега -->
      <!-- title - название столбца в таблице -->
    <%= f.text_field :title %> <!-- <input type="text" name="article[title]" id="article_title" /> -->
  </p>

  <p>
    <%= f.label :text %><br> <!-- <label for="article_text">Text</label> -->
    <%= f.text_area :text %> <!-- <textarea name="article[text]" id="article_text"></textarea> -->
  </p>

  <!-- ===== User 1 - * Article. Возможность удалить и редактировать только автору ===== -->
  <p>
    <%= current_user.username %><br> <!-- вместо лэйбла -->
    <%= f.hidden_field :user_id, value: current_user.id %>
    <!-- <input value="2" autocomplete="off" type="hidden" name="article[user_id]" id="article_user_id" /> -->
  </p>
  <!-- ================================================================================= -->

  <!-- Пример реализации селектора https://stackovergo.com/ru/q/6043668/how-to-add-a-class-to-selecttag-in-ruby-on-rails -->
  <%= f.label :commentable_type, class: 'form-label' %>
  <%= f.select :commentable_type, ["Post", "Image"], {}, class: 'form-select' %>
  <!-- Между значениями опций селектора и параметрами класса нужен пустой хэш -->
  <!-- ================================================================================= -->

  <p><%= f.submit %></p> <!-- <input type="submit" name="commit" value="Save Article" data-disable-with="Save Article" /> -->


<% end %>









<!--  -->
