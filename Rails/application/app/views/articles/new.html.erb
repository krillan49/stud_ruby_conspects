<h1>New article</h1>

<!--                                            Форма form_for -->

<!-- Синтаксис Рэилс для формы не обязателен и можно использовать обычный HTML, как в формах Синатры -->

<%= form_for :article, url: articles_path, data: {turbo: false} do |f| %> <!-- Тут именно с %= -->
  <!-- form_for - стандартный форм билдер(хэлпер), создает форму, используется не так часто тк есть другие форм билдеры -->
  <!-- :article - параметр(? для генерации значения атрибута name ?) в единственном числе, тк форма отправляет данные об одной сущности -->
    <!-- В итоге если посмотреть код то будет создана форма и скрытое поле в ней(нужно для безопасности приложения): -->
    <form action="/articles/new" accept-charset="UTF-8" method="post">
      <input type="hidden" name="authenticity_token" value="DGyL-HHUE0zhYRgsnOmkAZGbJQ" autocomplete="off" />
      <!--  Поля формы -->
    </form>
  <!-- url: articles_path (можно и захардкодить - url: '/articles') - запрос POST '/articles'. Добавляем хэлпер пути, те меняем путь, тк по умолчанию у form_for :article стоит URL GET "/articles/new" и при нажатии кнопки произойдет ошибка(тк по данному URL существует только GET-обработчик в экшене new). Для POST используется экшен create c URL '/articles', соотв надо перенаправить форму на него. Теперь если посмотреть код то адрес в теге формы изменился: -->
    <form action="/articles" accept-charset="UTF-8" method="post"><!--  Поля формы --></form>
  <!-- data: {turbo:false} - нужно дописать, если в приложении используется turbo, иначе форма не отправится/обработается корректно, в теге формы появится новый атрибут -->
    <form data-turbo="false" action="/articles" accept-charset="UTF-8" method="post"><!--  Поля формы --></form>
  <!-- url: '/articles', data: {turbo:false}  - это и все дополнительное это хэш -->


  <!--                                      Поля формы в Рэилс -->

  <!-- https://guides.rubyonrails.org/form_helpers.html -->

  <p>
    <%= f.label :title %><br> <!-- это будет: --> <label for="article_title">Title</label>
      <!-- label - название/обозначение тега label -->
      <!-- title - название столбца в таблице/модели -->
    <%= f.text_field :title %> <!-- будет: --> <input type="text" name="article[title]" id="article_title" />
  </p>

  <p>
    <%= f.label :text %><br> <!-- будет: --> <label for="article_text">Text</label>
    <%= f.text_area :text %> <!-- будет: --> <textarea name="article[text]" id="article_text"></textarea>
  </p>

  <!-- ===== Devise User 1 - * Article. Возможность удалить и редактировать только автору ===== -->
  <p>
    <%= current_user.username %><br> <!-- вместо лэйбла -->
    <%= f.hidden_field :user_id, value: current_user.id %>
    <!-- это будет: -->
    <input value="2" autocomplete="off" type="hidden" name="article[user_id]" id="article_user_id" />
  </p>
  <!-- ================================================================================= -->

  <!-- Пример реализации селектора https://stackovergo.com/ru/q/6043668/how-to-add-a-class-to-selecttag-in-ruby-on-rails -->
  <%= f.label :commentable_type, class: 'form-label' %>
  <%= f.select :commentable_type, ["Post", "Image"], {}, class: 'form-select' %>
  <!-- Между значениями опций селектора и параметрами класса нужен пустой хэш -->


  <p><%= f.submit %></p> <!-- будет: --> <input type="submit" name="commit" value="Save Article" data-disable-with="Save Article" />


<% end %>











<!--  -->
