puts '                                               Linux'

# Linux – это семейство Unix-подобных операционных систем.

# Unix – семейство многозадачных и многопользовательских операционных систем. Unix позволяет одновременно работать сразу с несколькими терминалами, разным людям, при этом каждый из них может выполнять свои действия, что будут использовать ресурсы одного общего ПК.

# Linux - это само ядро, при помощи которого собирают конкретные дистрибутивы(ubuntu, mint итд).

# Linux имеет полностью открытий исходный код, а это дает разработчику возможности создать все что-угодно на основе ядра Линукс.

# Дистрибутивы это полноценные оболочки или другими словами операционные системы, что были созданы на основе ядра Линукс. Большинство дистрибутивов бесплатные.

# https://itproger.com/news/kakoy-linux-distributiv-vibrat-top-7  - описание топ дистрибутивов

# https://ubuntu.com/download/desktop       - скачать образ(iso - который можно использовать для установки как на джелезо, например с сд-диска, так и с виртуальной маины) убунту с оф сайта(лучше качать стабильную LTS версию, а не последнюю)
# https://www.linuxmint.com/                - оф сайт Минта. Является самым популярным дистрибутивом. Отличается хорошей стабильностью и простотой работы. В качестве основы используется Ubuntu.
# Андроид также является дистрибутивом, что создан на основе ядра Линукс.


puts
puts '                                            Ubuntu установка'

# https://help.ubuntu.com/stable/ubuntu-help/index.html

# 1. Выбираем язык, далее нажимаем "Install Ubuntu/Установить Ubuntu"
# 2. Выберем язык раскладки клавиатуры
# 3. Выберем тип установки и дополнительные программы, если нужны
# 4. Тип установки(как поступить с жеским диском, можно очистить данные перед установкой или еще чтото, на виртуалке очистит диск виртуальной машины). Дадее в доп окне сообщит о разбиении на поддиски(портишены)
# 5. Выберем временную зону
# 6. Создадим администратора: Укажем наше имя, имя машины, имя пользователя, пароль входа и можно поставить галочку чтоб потом спрашивало пароль(123456). Лучше указывать все на латинице
# Далее запускается процесс установки


puts
puts '                                            Ubuntu клавиши'

# Горячие клавиши настроить     - например для смены языка можно настроить в "Настройки" -> "Комбинации клавиш" - "Переключиться на следующий источник ввода"

# Return                        - аналог Enter(в виртуалке с винды собственно и используется Enter)

# Ctrl + Alt + T                - открыть терминал

# Ctrl + H                      - показать/скрыть скрытые фаилы

# win + пробел                  - для смены языка


puts
puts '                                            Ubuntu интерфейс'

# 1. В самом верху есть панель-бар в которов находятся слева-направо:
# Обзор - можем при помощи него искать нужные приложения
# Время и дата
# Переключение языка
# Панель звука, сети, настроек, выключения

# Настройки - в правом верхнем углу(панель выключения) там в меню и настройки
# Нужную настройку можно найти поиском(левый верхний угол в меню настроек)
# Пример находим "Настройка экранов" и справа в подпункте "Разрешение" можем поменять разрешение(например 1920x1080(16:9))
# Пример находим "Фон" и двойным нажатием по картинке можем изменить картинку главного экрана
# Пример находим "Внешний вид" можем менять визуал в целом


# 2. Боковая панель(слева), содержит иконки в данный момент открытых приложений и приложений, что находятся в быстром доступе, по умолчанию это:
# Браузер Фаерфокс
# Фаилы - программа для работы с папками в системе(Домашняя папка - корневая всего нашего компьютера)
# Ubuntu Software - приложение для установки других приложений
# Справка
# Корзина
# Показать приложения - (внизу) кнопка которая открывает меню со всеми приложениями установленными в системе и поиском по ним

# Чтобы добавить приложение в эту панель открываем его, нажимаем правой кнопкой и выбираем "Добавить в избранное"


puts
puts '                                              Ubuntu Gnome'

# https://help.ubuntu.com/stable/ubuntu-help/index.html

# Gnome — это бесплатная и полностью свободная среда рабочего стола для операционных систем на основе UNIX.

# gnome-look.org   - сайт где можно скачать темы, тоесть вессь внешний вид системы (как их установить описано в их документации там же)  https://www.youtube.com/watch?v=Nn5jaVjRUgY   (12-20+)

# Ubuntu по умолчанию поставляется с окружением рабочего стола Gnome. Но можно установить и другие

# GTK это набор библиотек для отрисовки графического интерфейса, он написан на Си и используется в окружениях рабочего стола для Linux, напримсер в Gnome, Xfce, Cinnamon, Mate. Но Kde plasma уже используется QT. Который как по получше и современнее. Плюс он поддерживает ещё и Android.

# Проверить версию библиотеки GTK в терминале:
# ~S dpkg -s libgtk-3-0|grep '^Version'
# dpkg          -    обращаемся к програмному обеспечению
# libgtk-3-0    -    библиотека GTK версии 3-0


puts
puts '                                      Терминал и основные команды'

# Ctrl + Alt + T   - открыть терминал, так же можно зайти через меню приложений или обзор на верхней панели

# Для вставки и копирования текста в терминале можно использовать
# ctrl+shift+c        - копировать
# ctrl+shift+v        - вставить


# При помощи команд терминала(командной строки) Linux можно выполнять людые действия в операционной системе.
# Eсть некоторые дистрибутивы, что вовсе не содержат графический интерфейс
# Ctrl+alt+F1   -  любой дистрибутив можно переключить в консольный режим отключив графическую оболочку

# Папка /home/ это можно так сказать userspace, пользовательское пространство. Для личных файлов, фотографий итд. А корневая папка, она и является корнем и обозначается она как "/"

# ~            - (тильда) домашняя директория, аналог /home/username
# ~$           - слева от "$" пишется текущая директория (тут домашния директория)
# ~/Загрузки$  - тоесть текущая директория это /home/username/Загрузки  (Не обязательно писать "Загрузки" на русском. Можно и "Downloads" эффект будет тем же)


# $ clear     - очистить терминал от записей

# 1. pwd - выводит текущую рабочую директорию. PWD расшифровывается как «print working directory».
# $ pwd    #=> /home/username (например)

# 2. cd - выполняет переход между папками(директориями) после нее пишем полный или относительный путь.
# $ cd fname                   - перейти в папку что находится в текущей директории (относиельноый путь)
# $ cd ~                       - перейти в домашнюю директорию
# $ cd                         - перейти в домашнюю директорию
# $ cd ~/Загрузки/ваша_папка   - перейти по полному пути
# $ cd Загрузки/ваша_папка     - перейти по относительному пути
# $ cd ..                      - перейти на директорию вверх
# $ cd ../Загрузки/ваша_папка  - перейти на директорию вверх и по относительному пути

# 3. ls - просмотреть содержимое какой либо директории
# $ ls                  - просмотреть содержимое текущей директории
# $ l                   - посмотреть содержимое директории с обозначением папок как name/
# $ ls /home/username   - отображение содержимого в папке /home/username


# К каждой команде есть дополнительные опции (флаги). Они добавляют дополнительное действие при выполнении команды. Чтобы просмотреть все возможные опции для определенной команды пропишите после неё «--help».
# $ ls --help            - посмотреть все дополнительные опции к команде ls
# $ ls -l                - отображение подробной информации относительно файлов и папок (права доступа, кто создал, вес)
# $ ls -r                - выведет в обратном порядке (по умолчанию алфавитный)
# $ ls -p                - выведет в вормате name/  (аналог команды l)
# $ ls -p -r             - можно указывать несколько флагов


puts
puts '                                 Терминал работа с фаилами и директориями'

# 1. touch - команда позволяет создать один или несколько файлов в определенной директории. Не может создавать фаилы
# $ touch index.html                              - Будет создан один файл в текущей директории
# $ touch www/index.html                          - Будет создан один файл в папке www
# $ touch www/index.html www/css/style.css        - Будет создано два файла в папке www и в www/css


# 2. nano - команда позволяет открыть фаил для редактирования, но если фаил не существует, то он будет создан и открыт. В окне редактирования можно изменять фаил, снизу прописаны дополнительные команды, гдн символ "^" обозначет ctrl
# $ nano index.html                      - Будет открыт один файл
# $ nano www/index.html                  - Будет открыт файл в папке www


# 3. mkdir - позволяет создать папку в определенной директории, можно создать как одну, так и несколько папок одновременно. Но нельзя создать и папку и папку внутри нее сразу же.
# $ mkdir www                            - Будет создана папка
# $ mkdir www/css user                   - Будут созданы две папки(одна в уже существующей папке www)


# 4. cp - используется для копирования файла. При копировании вы можете указать новое имя и новую папку для файла.
# $ cp file.txt www/file2.txt             - копирование file.txt из текущей директории и изменение его имени на file2.txt
# $ cp ~/some/file.txt www/file2.txt      - копирование file.txt из директории ~/some/


# 5. mv - позволяет переместить(вырезать и вставить) файл из одной папки в другую.
# $ mv test/file.txt some                 - перемещение файла из папки test в папку some
# $ mv file.txt ..                        - перемещение файла на уровень выше(тут выше от текущего уровня рабочей директории)
# $ mv www/file.txt www/..                - перемещение фаила из папки www в текущую папку


# 4. rm - команда удаляет один или несколько файлов. Для удаления папок нужно дописать опцию -rf
# $ rm test/some/file.txt                 - удаление файла из директории test/some/
# $ rm test/*                             - удалить все фаилы из директории test/
# $ rm test/*.txt                         - удалить все фаилы с расширением .txt из директории test/
# $ rm test/text.*                        - удалить все фаилы с названием text. из директории test/
# $ rm file_*.txt                         - удаление всех файлов, что начинаются на file_ и заканчиваются .txt
# $ rm -rf test/dir                       - удаление папки с названием «dir» из папки test/


puts
puts '                                 Супер пользователь. Права доступа'

# Администратор в Linux называется супер пользователь(super user).

# Некоторые действия могут быть выполнены от имени администратора. Для выполнения действий от имени администратора перед командой нужно прописать ключевое слово sudo (super user do)

# При создании файлов или папок от имени администратора(попросит пароль после нажатия Enter), они будут иметь закрытые права доступа и пометку на значке фаила. Это означает, что их редактирование и удаление может быть выполнено только супер пользователем.

# $ sudo touch file.txt                   - создание фаила с правами администратора(попросит пароль после нажатия Enter)
# $ sudo nano file.txt                    - теперь для редактирования(или удаления) этого фаила тоже надо использовать sudo
# $ sudo !!                               - выполнить предыдущую команду (тут nano file.txt)

# Можно в терминале перейти в режим администратора при помощи команды смены пользователя, чтобы не писать перед каждой командой sudo
# $ sudo su                      - переход в режим администратора
# Теперт в пути у нас прописывается /root перед именем компьютера:
# krillan@krillan-itp-ubuntu:~/Документы$                        - было (обычный юзер)
# root@krillan-itp-ubuntu:/home/krillan/Документы#               - стало (суперюзер)
# # su krillan                   - переход из режима администратора обратно в режим пользователя



# chmod (change modification) - команда, чтобы менять права доступа

# chown (change ownership) - команда для изменения владельца



















#
