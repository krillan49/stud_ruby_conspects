puts '                                                 Vargant'

# ! Вагрантом пользовались только для разработки для воспроизводства производственной среды. docker - решение, одинаковое и для промышленного развертывания и для разработки. Он круче, вокруг него экосистема на порядок сильнее (в том числе коммерческая), он нативен на linux без виртуальных машин. Как только Docker получил популярность, про вагрант - все сразу забыли. Но если нужно оперировать виртуалками с операционными системами отличными от linux, вагрант может быть полезен.

# Виртуальная машина на линуксе(для запуска на любой системе) - туда установятся(bootstrap.sh - просто похожее название) Руби, Рэилс, СУБД и еще много всякого что нужно

# поставить виртуал бокс и Vargant и установить рэилс дев бокс по инструкции

# https://github.com/rails/rails-dev-box   # rails-dev-box  -  способ настройки среды
# https://www.virtualbox.org/
# https://www.vagrantup.com/    # Vargant

# host $ git clone https://github.com/rails/rails-dev-box.git
# host $ cd rails-dev-box
# host $ vagrant up
# (vagrant up - будет создана виртуальная машина с линуксом)

# host $ vagrant ssh
# Welcome to Ubuntu 22.10 (GNU/Linux 5.19.0-21-generic x86_64)
# ...
# vagrant@rails-dev-box:~$
# (входим в консоль виртуальной машины)

# Создастся виртуальная машина Линукс и когда мы зайдем в браузере на порт 3000 то его запустит виртуальная машина


puts
puts '                                               VirtualBox'

# VirtualBox (Oracle VM VirtualBox) — программный продукт виртуализации для операционных систем Windows, Linux, FreeBSD[8], macOS, Solaris/OpenSolaris, ReactOS, DOS и других. При потмощи нее можно создать виртуальную омашину, как бы виртуальный обособленный компьютер, например для 2й операционной системы

# Виртуальная машина (VM) - это виртуализация или эмуляция компьютерной системы. Виртуальные машины основаны на компьютерных архитектурах и обеспечивают функциональность физического компьютера

# Виртуальная машина изолирована. Гостевая система работает в полностью изолированной среде, и поэтому то, что вы делаете в гостевой системе, не повлияет на хост-систему.

# Виртуальная машина позволяет легко обмениваться файлами между хост- и гостевой системами с помощью перетаскивания, даже если хост-системой является Windows, а гостевой системой - Linux.

# https://www.virtualbox.org/wiki/Downloads
# VirtualBox 7.0.16 platform packages - качаем из этого раздела по ссылкам с нужной операционкой

# При установке VirtualBox можно оставить все опции по умолчанию

# Уроки со скачиванием и настройкой
# https://itproger.com/course/linux/2
# https://www.youtube.com/watch?v=hPR9IBsDdwc&list=PL0lO_mIqDDFUwVWvVitxG2oXA6a-Nq-Qq&index=8
# https://www.youtube.com/watch?v=fAHpGshMCgQ&list=PLg5SS_4L6LYuE4z-3BgLYGkZrs-cF4Tep&index=3


# 1. Создание виртуальной машины(как бы виртуального компьютера)
# а. "Создать/New" - (синяя звездочка) кнопка в разделе "Инструменты", которая создаст виртуальное окружение
# б. выбираем название в появившимся окне(можно любое но лучше название операционной системы, что будет использоваться на этой виртуальной машине, например Ubuntu, в этом случае ниже тип и версия подберутся автоматически)
# в. Далее укажем объем оперативной памяти выделяемый физическим компьютером под нашу виртуальную машину.
# г. Создадим новый виртуальный жеский диск для нашей виртуальной машины, так же можно указать его тип(можно по умолчанию оставить VirtualBoxDiscImage). Так же можно выбрать тип диска динамический(может использовать больше или меньше выделенной памяти) или фиксированный(будет занимать именно столько памяти сколько мы выделили)
# Когда нажимаем готово/создать наша виртуальная машина будет создана и появится ее раздел рядом с разделом "Инструменты"

# 2. Настройки созданной виртуальной машины
# "Настроить" - кнопка в разделе нашей виртуальной машины, позволяет зайти в настройки, далее описание кнопок уже этих настроек:
# а. "Общие/General" - можно изменить название тип и версию операционной системы
# б. "Система/Sistem" - содержит подразделы:
#     б1. "Материнская плата/Motherboard" - убедимся что поставлены галочки на 'Включить I/O APIC' и 'Часы в системе UTS'
#     б2. "Процессоры/Processor" - можно изменить колличесво выделенных ядер процессора физическим компьютером для нашей виртуальной машины
#     б3. "Ускорение/Acceleration" (7-51 у гоши дударя, но вроде в коментах пишут что не надо) Из комментов: hyper-v доступна только на w10pro, а на home виртуалка спокойно работает и без этой галочки. И в Windows компонент Hyper-V лучше не включать, чтобы не тормозило
# г. "Дисплей/Display" - видеопамять лучше поставить 128(для ОС Убунту). Так же гоша советует включить 3D-ускорение(не включал)
# д. "Носители/Storage" - В Контроллер IDE вместо пусто нужно вставить наш образ(тут Ubuntu), для этого справа напротив 'Оптический привод' нажимаем маленькую голубую кнопку, выбираем Выбрать/создать виртуальный оптический диск -> в появившемся меню через кнопку Добавить, выберем образ и нажмем кнопу выбрать снизу
# e. "Суть/Network" - ничего менять не нужно. По умолчанию стоит NAT тоесть виртуальная машина будет использовать то же подключение что и физический компьютер
# Когда выбрали все настройки просто нажимаем "ОК"

# 3. Запуск нашей виртуальной машины(может немного потормозить)
# "Запуск" - (зеленая стрелка вправо) кнопка в разделе нашей виртуальной машины, запустит нашу машину и если есть образ с ОС то предложит меню ее установки, либо запустит виртуальную машину, если ОС на ней уже установлено.
# Откроется дополнительное окно нашей виртуальной машины. Установка происходит как и на железе
# После установки нужно вытащить диск(можно выключить для этого виртуальную машину а потом снова запустить)

# Правый ctrl+F - полноэкранный режим/выход из полноэкранного режима запущенной виртуальной машины
# При закрытии окна виртуальной машины появится панель с опциями отключения


# Способы Исправить маленькое разрешение экрана:

# Чтобы изменить разрешение экрана на нормальное, нужно в настройках виртуальной машины во вкладке "Дисплей" убрать галочку 3d ускорение и выбрать графический контроллер VboxSVGA. Далее, в окне самой ubuntu, в правом нижнем углу есть значок монитора, жмякаем по нему правой кнопкой и меняем разрешение на нужное.

# https://www.youtube.com/watch?v=fAHpGshMCgQ&list=PLg5SS_4L6LYuE4z-3BgLYGkZrs-cF4Tep&index=6 16-35

# https://losst.pro/razreshenie-ekrana-virtualbox-v-ubuntu

# По примеру все равно не смог нормальной адаптации добиться  на ноуте с фул эйч ди. Реомендую поставить пакет - Guest Additions. Уверен что поможет многим.
# Before installing  VirtualBox Guest Additions on Ubuntu 22.04 we need to install some required packages. So open the terminal and run the following command.
# 1) sudo apt install linux-headers-$(uname -r) build-essential dkms
# Then you need to reboot your system.
# 2) sudo apt update
# 3) sudo apt install -y build-essential linux-headers-$(uname -r)
# Then you need to reboot your system


puts
puts '                                   Docker(отредактировать из Docker.txt)'


















#
