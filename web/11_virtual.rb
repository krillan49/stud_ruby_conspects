puts '                                               VirtualBox'

# VirtualBox (Oracle VM VirtualBox) — программный продукт виртуализации для операционных систем Windows, Linux, FreeBSD[8], macOS, Solaris/OpenSolaris, ReactOS, DOS и других. При помощи нее можно создать виртуальную машину

# Виртуальная машина (VM) - это виртуализация/эмуляция компьютерной системы. Виртуальные машины основаны на компьютерных архитектурах и обеспечивают функциональность как у физического компьютера

# Виртуальная машина изолирована. Гостевая система работает в полностью изолированной среде, те любые манипуляции в гостевой системе, не повлияют на хост-систему.

# Виртуальная машина позволяет легко обмениваться файлами между хост- и гостевой системами с помощью перетаскивания, даже если хост-системой является Windows, а гостевой системой - Linux.


# https://www.youtube.com/watch?v=PilOxHmTx4I     - Установка настройка VirtualBox    (про флэшку на 6-42)
# https://www.youtube.com/watch?v=T8fhv8nkDxQ     - Как увеличить размер виртуального диска VirtualBox
# https://www.youtube.com/watch?v=_QyjnEIgvxE     - VirtualBox Ошибка E_INVALIDARG (0x80070057)
# https://www.youtube.com/watch?v=yry04ploL9U     - Как включить виртуализацию в bios на компьютере
# https://www.youtube.com/watch?v=xBiTsGkQgCo     - Как установить Ubuntu MATE Linux на virtualbox
# https://www.youtube.com/watch?v=H6-lEVsGOsY     - Как Установить MacOS на VirtualBox
# https://www.youtube.com/watch?v=o_EhI58z85Y     - Как установить Windows 7 на VirtualBox
# https://www.youtube.com/watch?v=LJMuk2FfMqw     - Как установить Windows XP на VirtualBox
# https://www.youtube.com/watch?v=pOXfQ2P1plw     - Как перенести Виртуальные машины VirtualBox на ssd диск
# https://www.youtube.com/watch?v=r3JIbhzbmO8     - Как перенести виртуальную машину VirtualBox на стационарный компьютер

# Скачивание и настройка
# https://www.youtube.com/watch?v=hPR9IBsDdwc&list=PL0lO_mIqDDFUwVWvVitxG2oXA6a-Nq-Qq&index=8
# https://www.youtube.com/watch?v=fAHpGshMCgQ&list=PLg5SS_4L6LYuE4z-3BgLYGkZrs-cF4Tep&index=3


# https://www.virtualbox.org/wiki/Downloads          - скачивание VB и дополнительныъ фич для него
# ​Windows hosts            - скачивание VB под виндоус (раздел VirtualBox 7.0.16 platform packages)
# ​All supported platforms  - скачиваем плагин для поддержки ЮСБ-носителей(все наши VM будут поддерживать флэшки)

# При установке VirtualBox можно оставить все опции по умолчанию
# Установка плагина для ЮСБ тоже все по умолчанию


# Настройки самого VirtualBox (Инструменты -> Настройки)
# 1. Можно изменить папку для виртуальных машин на другую: Общие -> Папка для машин по умолчанию



# 0. Если в Биосе не подключена поддержка виртуализации, то не получится создать ВМ, предварительно нужно будет зайти в Биос и подключить

# 1. Создание виртуальной машины(как бы виртуального компьютера)
# а. "Создать/New" - (синяя звездочка) кнопка в разделе "Инструменты", которая создаст виртуальное окружение
# б. выбираем название в появившимся окне(можно любое но лучше название операционной системы, что будет использоваться на этой виртуальной машине, например Ubuntu, в этом случае ниже тип и версия подберутся автоматически)
# в. Далее укажем объем оперативной памяти выделяемый физическим компьютером под нашу виртуальную машину.
# г. Создадим новый виртуальный жеский диск для нашей виртуальной машины, так же можно указать его тип(можно по умолчанию оставить VirtualBoxDiscImage). Так же можно выбрать тип диска 'динамический'(может использовать больше или меньше выделенной памяти физического диска) или 'фиксированный'(будет занимать именно столько памяти сколько мы выделили)
# Когда нажимаем готово/создать наша виртуальная машина будет создана и появится ее раздел рядом с разделом "Инструменты"


# 2. Настройки созданной виртуальной машины
# "Настроить" - кнопка в разделе нашей виртуальной машины, позволяет зайти в настройки, далее описание кнопок уже этих настроек:
# а. "Общие/General"
#     а1. "Основные" - можно изменить название тип и версию операционной системы
#     а2. "Дополнительно" -> 'Общий буфер обмена' -> 'Двунаправленный'   - позволит перетаскивать фаилы с виртуальной машины на хост машину и обратно
# б. "Система/Sistem" - содержит подразделы:
#     б1. "Материнская плата/Motherboard" - убедимся что поставлены галочки на 'Включить I/O APIC' и 'Часы в системе UTS'. Так же можно именить количество оперативной памяти
#     б2. "Процессоры/Processor" - можно изменить колличесво выделенных ядер процессора физическим компьютером для нашей виртуальной машины
#     б3. "Ускорение/Acceleration" - (7-51 у гоши дударя, в коментах пишут что не надо) Из комментов: hyper-v доступна только на w10pro, а на home виртуалка спокойно работает и без этой галочки. И в Windows компонент Hyper-V лучше не включать, чтобы не тормозило
# г. "Дисплей/Display" - видеопамять лучше поставить 128(для ОС Убунту). Так же гоша советует включить 3D-ускорение(не включал)
# д. "Носители/Storage" - В Контроллер IDE вместо 'пусто' нужно вставить наш образ(тут Ubuntu, еще там есть какойто Виртуалбокс Гуест аддишонс, мб это для разрешений экрана и есть ???), для этого справа напротив 'Оптический привод' нажимаем маленькую голубую кнопку, выбираем 'Выбрать/создать' виртуальный оптический диск -> в появившемся меню через кнопку 'Добавить', выберем образ и нажмем кнопку 'Выбрать' снизу
# e. "Сеть/Network" - ничего менять не нужно. По умолчанию стоит NAT тоесть виртуальная машина будет использовать то же подключение что и физический компьютер
# Когда выбрали все настройки просто нажимаем "ОК"
# ж. "USB"   - можем выбрать под наш физич комп, например 3.0
# з. "Общие папки"  - можно назначить общие папки(сначала выполнить "Общие/General" а2) для виртуальной машины и хост-машины. После выбора можно поставить галочуку "Автоподключение" и назначить точку монтирования, например \share
# Например на Ubuntu общая папка появится внизу списка в приложении "Фаилы". Если говорит "Не удалось просмотреть содержимое папки, недостаточно прав для просмотра объекта" то выполним команду
# $ sudo adduser krillan vboxsf      - тоесть добавляем пользователя krillan в группу vboxsf
# Далее если не будет открываться, перезапустить систему


# 3. Запуск нашей виртуальной машины(может немного потормозить)
# "Запуск" - (зеленая стрелка вправо) кнопка в разделе нашей виртуальной машины, запустит нашу машину и если есть образ с ОС то предложит меню ее установки, либо запустит операцтонку виртуальной машины, если ОС на ней уже установлено.
# Откроется дополнительное окно нашей виртуальной машины.
# Установка происходит как и на железе
# После установки нужно вытащить диск(можно выключить для этого виртуальную машину а потом снова запустить)


# Ctrl(Правый) + F           - полноэкранный режим/выход из полноэкранного режима запущенной виртуальной машины

# При закрытии окна виртуальной машины появится панель с опциями отключения



# Способы Исправить маленькое разрешение экрана:

# В меню сверху окна запущенной виртуальной машины выбираем:
# 'Устройства' -> 'Подключить образ диска Дополнительной гостевой ОС...'
# Заходим в папку с файлами на этом диске, выбираем там фаил для соотв типа операционной системы выртуальной машины, например 'VBoxLinuxAdditions.run', либо на Ububntu я запустил как приложение фаил autorun.sh
# Этот компонент позволяет связать операционную систему виртуальной машины с физическим железом: 3д ускорители подключает, помогает с жеским диском адекватно работать(сорздавать общие папки), подстраивать разрешение под монитор(а так же под размер окна)


# Если все равно не смог нормальной адаптации добиться, например на ноуте с фул эйч ди то можно поставить пакет - Guest Additions:
# Before installing  VirtualBox Guest Additions on Ubuntu 22.04 we need to install some required packages. So open the terminal and run the following command.
# 1) sudo apt install linux-headers-$(uname -r) build-essential dkms
# Then you need to reboot your system.
# 2) sudo apt update
# 3) sudo apt install -y build-essential linux-headers-$(uname -r)
# Then you need to reboot your system


puts
puts '                                                 Vargant'

# !!! Вагрантом пользовались только для разработки для воспроизводства производственной среды. Docker - решение, одинаковое и для промышленного развертывания и для разработки. Он круче, вокруг него экосистема на порядок сильнее (в том числе коммерческая), он нативен на linux без виртуальных машин. Как только Docker получил популярность, про Вагрант - все сразу забыли. Но если нужно оперировать виртуалками с операционными системами отличными от linux, вагрант может быть полезен.

# Виртуальная машина на Линуксе(для запуска на любой системе) - туда установятся(bootstrap.sh - просто похожее название) Руби, Рэилс, СУБД и еще много всякого что нужно

# Поставить Виртуал бокс и Vargant и установить рэилс дев бокс по инструкции

# https://github.com/rails/rails-dev-box   # rails-dev-box  -  способ настройки среды
# https://www.virtualbox.org/
# https://www.vagrantup.com/    # Vargant

# host $ git clone https://github.com/rails/rails-dev-box.git
# host $ cd rails-dev-box
# host $ vagrant up
# (vagrant up - будет создана виртуальная машина с линуксом)

# host $ vagrant ssh
# Welcome to Ubuntu 22.10 (GNU/Linux 5.19.0-21-generic x86_64)
# ...
# vagrant@rails-dev-box:~$
# (входим в консоль виртуальной машины)

# Создастся виртуальная машина Линукс и когда мы зайдем в браузере на порт 3000 то его запустит виртуальная машина


puts
puts '                                   Docker(отредактировать из Docker.txt)'


















#
