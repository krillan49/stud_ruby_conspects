<!DOCTYPE html>
<html>
  <head lang="<%= I18n.locale %>"> <!--  I18n.locale  - добавим для языка перевода -->

    <meta charset="utf-8"> <!-- пропишем кодировку для I18n и еще много чего -->

    <title>Blog</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <!-- иконка -->
    <%= favicon_link_tag 'favicon.png' %>

    <!-- стили -->
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
  </head>

  <body>
    <!--                             Devise: Добавим ссылки входа и выхода -->

    <!-- Логичнее всего добавлять в шапку -->


    <!-- Вариант 1: хардкод -->
    <a href="/users/sign_in">Sign In</a>
    <a href="/users/sign_out" data-turbo-method="delete">Sign Out</a>
    <!-- data-turbo-method="delete" - В Rails 7 вместо data-method нужно использовать data-turbo-method. Иначе для sign_out возникнет ошибка при нажатии на ссылку, тк у маршрута /users/sign_out метод DELETE -->


    <!-- Вариант 2: по методам-хэлперам для путей(можно посмотреть пути введя несуществующий URL) -->
    <%= link_to "Sign In", new_user_session_path %> <!-- GET	 /users/sign_in(.:format)	  devise/sessions#new -->
    <%= link_to "Sign Out", destroy_user_session_path, method: :delete %> <!-- GET	 /users/sign_out(.:format)	devise/sessions#destroy (!!! delete при помощи запроса GET) -->
    <!-- Из комментов(! но у меня и без этого сработало):
      link_to 'Sign Out', destroy_user_session_path, data: { 'turbo-method': :delete, 'turbo-confirm': 'Выйти? Вы уверены?' }
    -->


    <!-- Вариант 2-2: выведем почту/имя пользователя если авторизированы, и уберём Sign Out ссылку, когда мы не авторизованы, при помощи обработчиков хэлперов.
    https://github.com/heartcombo/devise#controller-filters-and-helpers -->
    <% if user_signed_in? %>
      <!-- а. Вариант с почтой -->
      Hello, <%= current_user.email %> | <%= link_to "Sign Out", destroy_user_session_path, method: :delete %>
      <!-- б. Вариант с именем, поле которого мы добавили в User и в форму devise/registrations/new.html.erb -->
      Hello, <%= current_user.username %> | <%= link_to "Sign Out", destroy_user_session_path, method: :delete %>
    <% else %>
      <%= link_to "Sign In", new_user_session_path %>
    <% end %>
    <!-- user_signed_in? - хэлпер созданный Devise, возвращает true или false, в зависимости от того авторизован или нет данный пользователь -->
    <!-- current_user - хэлпер созданный Devise, возвращает объект сущности User текущего пользователя, соотв можно от него вызывать методы сущности(столбцы таблицы) -->


    <!--                  Devise: Добавим для для флеш-сообщений(чтобы эта технология работала) -->

    <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>




    <!--                         i18n меню для переключения языков(для шапки бутстрап) -->

    <ul class="nav mb-2 mb-md-0">
      <li class="dropdown">
        <%= link_to '#', class: 'nav-link px-2 dropdown-toggle', data: {"bs-toggle": 'dropdown'} do %>
          <%= tag.div '', class: "flag #{I18n.locale}-flag mt-1" %> <!-- просто тег для выравнивания, интерполяция для названия классов, видимо разные css-свойства для разных языков -->
          <%= t I18n.locale %> <!-- Название текущей локали -->
        <% end %>

        <ul class="dropdown-menu"> <!-- собственно дропдаун с выбором локали -->
          <% I18n.available_locales.each do |locale| %>
            <li>
              <% if I18n.locale == locale %> <!-- если текущая локаль равна локали из списка доступных -->
                <%= tag.span t(locale), class: 'dropdown-item' %> <!-- отображаем название локали, тут t(locale) это перевод названия локали на нужный язык -->
              <% else %> <!-- если текущая локаль не равна локали из переменной -->
                <%= link_to t(locale), url_for(locale: locale), class: 'dropdown-item' %> <!-- ссылка переключения локали, добавляет локаль в URL ?? (можно было без дропдаун, списка и цикла по простому сделать лишь 2 ссылки переключения с url_for(locale: :ru) и url_for(locale: :en)) -->
                <!-- В уроке было root_path(locale: locale) -->
              <% end %>
            </li>
          <% end %>
        </ul>
      </li>
    </ul>



    <!--                                    Кастомные флэш-сообщения -->

    <!-- Отображаем наши флэш сообщения(тут используем бутстрап стили) -->
    <main class="container mt-3">
      <% flash.each do |k, v| %>
        <!-- k тут передает :success; v передает "Question created!" -->

        <!-- Вариант 1: синтаксис html -->
        <div class="alert alert-<%= k %>"> <!-- подставляем ключ k, который у нас имеет значение :success в значение класса, те получаем класс бутстрапа alert-success -->
          <%= v %> <!-- передаем значение, например "Question created!" -->
        </div>

        <!-- Вариант 2: синтаксис Рэилс с хэлпером tag (эта конструкция аналог для той что выше) -->
        <%= tag.div v, class: "alert alert-#{k}", role: 'alert' %> <!--  -->

      <% end %>

      <%= yield %>
    </main>


    <!-- Футер со вставкой года от сегодняшней даты(Руби) -->
    <footer>
      &copy; Kroker <%= Time.now.year %>
    </footer>


  </body>
</html>












<!--  -->
