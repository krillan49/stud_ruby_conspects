<!--                                         Стартовый вариант -->

<!-- Ссылка с якорем для открытия конкретного collapse элемента на странице -->
<%= link_to t('questions.show.comments'), "##{html_id}", class: 'btn btn-primary', data: {'bs-toggle': 'collapse'} %>
<!-- html_id - значение якоря будем передавать из questions/show.html.erb и answers/_answer.html.erb в точке рендера -->

<%= tag.div class: "collapse", id: html_id do %>
  <!-- id: html_id - назначаем в этот div значение id которое передали из questions/show.html.erb или answers/_answer.html.erb в точке рендера, соотв id на теге с классом collapse будет соответсвовать значению якоря на кнопке -->

  <%= form_with model: [commentable, (@comment || commentable.comments.build)], class: 'pt-3 border-top my-2' do |f| %>
  <!-- Строим URL по 2м моделям commentable и @comment, если коммента еще нет то создаем при помощи build, тоесть запрос будет POST "/questions/:question_id/comments" или "/answers/:answer_id/comments" -->

    <%= render 'shared/errors', object: @comment %>

    <%= f.label :body %>
    <%= f.text_area :body, class: 'form-control form-control-sm' %>

    <%= f.submit t('global.button.submit'), class: 'btn btn-sm btn-primary' %>
  <% end %>

  <!-- Список всех комментариев для данной commentable сущности рендерит коллекцию комментариев из commentable.comments.decorate при помощи _comment.html.erb -->
  <%= render commentable.comments.decorate %>
<% end %>



<!--                             Законченый вариант с исправлением отображения вывода ошибок -->

<!-- Создадим локальную переменную для данного паршала, чтобы не дублировать код -->
<% is_current_comment = comment&.for?(commentable) %> <!-- возвращает true или false -->
<!-- commentable - передается в паршал либо вопрос из questions/show.html.erb либо ответ из _answer.html.erb -->
<!-- comment - из comments_controller#create. Используем тут передаваемую в паршал локальную переменную вместо @comment тк так надежнее, она точно передается -->

<%= link_to t('questions.show.comments'), "##{html_id}", class: 'btn btn-primary', data: {'bs-toggle': 'collapse'} %>

<%= tag.div class: "collapse #{'show' if is_current_comment}", id: html_id do %>
<!-- #{'show' if is_current_comment} - добавляем класс бутстрапа открывающий коллапс объект для нужного блока -->

  <%= form_with model: [commentable, (is_current_comment ? comment : commentable.comments.build)] do |f| %>
  <!-- В URL используем comment, если это тот блок в который передается ошмбка (тоесть это значит что валидация не прошла) и форма подсветится красным(обводки полей) или билд новой сущьности для остальных блоков -->

    <!-- тоесть теперь мы вызываем отображение ошибок только для нужного блока -->
    <% if is_current_comment %>
      <%= render 'shared/errors', object: comment %>
    <% end %>

    <%= f.label :body %>
    <%= f.text_area :body, class: 'form-control form-control-sm' %>

    <%= f.submit t('global.button.submit'), class: 'btn btn-sm btn-primary' %>
  <% end %>

  <%= render commentable.comments.includes(:user).decorate %>
<% end %>









<!--  -->
