<!--                                           Вывод вопроса -->
<h1 class="mb-4"><%= @question.title %></h1>
<!-- @question прописан и в create контроллере Answers, нужно на случай с непройденной валидацией и рендером этой страницы -->

<!-- formatted_created_at - наш кастомный хэлпер, нужно прописать в модель Question -->
<time datetime="<%= @question.formatted_created_at %>">
  <%= @question.formatted_created_at %>
</time>

<!-- На примере вывода тела вопроса - хэлперы обработки тегов в тексте -->
<div class="lead my-3">
  <!-- 1. По умолчанию введенные пользователем в поле теги не обрабатываются, но их символы остаются -->
  <%= @question.body %>
  <!-- 2. html_safe - обрабатывает любые теги -->
  <%= @question.body.html_safe %>
  <!-- 3. sanitize - обрабатывает только безопасные теги -->
  <%= sanitize @question.body %>
  <!-- 4. Удаляет символы тегов, не обрабатывает их отавляя только текст из их тел -->
  <%= strip_tags @question.body %>
</div>

<%= link_to 'Show', question_path(@question), class: 'btn btn-primary' %>
<%= link_to 'Edit', edit_question_path(@question), class: 'btn btn-secondary' %>
<%= link_to 'Destroy', question_path(@question), class: 'btn btn-danger', data: {method: :delete, confirm: 'Are you sure?'} %>
<!-- По умолчанию не сможет удалить если у этого вопроса есть связвнные ответы, чтобы было можно, нужно настроить в модели -->


<hr class="my-3">



<!--                                           Форма для ответа -->
<h2>Write your answer</h2>

<!-- Используем общий паршал для ошибок  -->
<%= render 'shared/errors', object: @answer %>

<%= form_with model: [@question, @answer] do |f| %> <!-- post '/questions/:question_id/answers' -->
<!-- @answer = @question.answers.build  для создагия URL прописали в экшене show Questions -->

  <div class="mb-3 row">
    <div class="col-sm-2 col-form-label">
      <%= f.label :body %>
    </div>

    <div class="col-sm-10">
      <%= f.text_area :body, class: 'form-control' %>
    </div>
  </div>

  <%= f.submit "Submit answer!", class: 'btn btn-primary' %>
<% end %>


<!-- Вариант 2: Можно прописать весь этот код формы прямо тут, а можно вынести в отдельный паршал формы в answers/_form.html.erb, причем поместить туда и фому и паршал ошибок. Что удобно тк эту форму вместе с паршалом ошибок можно использовать и в answers/edit.html.erb -->
<%= render 'answers/form' %>
<!-- И просто рендерим паршал формы из дркугой директории сюда используя путь с директорией, тк тут директория questions -->



<!--                                           Вывод всех ответов -->
<h2 class="mt-5">Answers</h2>

<% @answers.each do |answer| %>
<!-- @answers = @question.answers.order created_at: :desc  -  прописали в экшене show контроллера Questions, похоже на хардкод вместо @question.answers -->
<!-- Тоже самое прописали и в create контроллере Answers, нужно на случай с непройденной валидацией и рендером этой страницы -->

  <article class="mb-3" id="answer-<%= answer.id %>">
  <!-- id="answer-... - добавим id для ссылки-якоря, в которой значением будет id из БД конкретного ответа -->

    <!-- formatted_created_at - наш кастомный хэлпер, нужно прописать в модель Answer -->
    <time datetime="<%= answer.formatted_created_at %>">
      <%= answer.formatted_created_at %>
    </time>

    <p>
      <%= answer.body %>
    </p>

    <!--                           Ссылки удаления, редактирования -->
    <%= link_to 'Delete', question_answer_path(@question, answer), data: {method: :delete, confirm: "Are you sure?"} %>
    <!-- question_answer_path(@question, answer) - передаем 2 параметра тк для URL нам нужны оба айдишника, важно сохранить порядок чтоб обладающая сущность стояла первой. Получим URL /questions/2/answers/2 -->
    <%= link_to 'Edit', edit_question_answer_path(@question, answer), class: 'btn btn-info btn-sm' %>

  </article>
<% end %>














<!--  -->
