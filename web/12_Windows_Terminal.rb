puts '                                       Терминалы Windows'

# Терминал - это по сути операционная система без графического интерфейса
# Терминал также называют “консоль”, “оболочка”, “шелл”, “командная строка”
# В терминале регистр символов роли не играет, поэтому можно все писать как с маленькой так и с большой буквы


# Существуют 3 разных командных строки:
# 1. Windows PowerShell (для: современные версии Виндоус) - добавляет имена многих команд cmd.exe и Bash к своим командам для удобства, так же использует полные имена(1й столбец). Находится: значек пуска -> правая кнопка -> выбираем обычный или администратор
# 2. cmd.exe/COMMAND.COM (для: MS-DOS, Windows 10 и ниже). Находится: выполнить -> cmd
# 3. Bash (для: Unix,BSD,Linux,Mac OS,Git Bash, ...)

# Если открыв меню пуска в Windows начать вводить cmd то выведет все варианты установленных командных строк



puts '                                  Права администратора на win10'

# Команда включения/выключения прав администратора на win10. Заходим в терминал от администратора и вводим:
# > net user Администратор /active:yes           - включить
# > net user Администратор /active:no            - выключить



puts '                                              Хоткеи'

# https://stackoverflow.com/questions/6205157/how-to-set-keyboard-shortcuts-to-jump-to-beginning-end-of-line  - настроить хоткеи

# стрелками вверх/вниз - история команд, те "вверх"(стрелка) возвращает предыдущие команды, а "вниз" следующую итд. Тоже самое делает колесико.

# Ctrl+c    - завершить любые программы в консоли
# Ctrl+d    - (обозначается также ^D) передает сигнал о том, что “ввод закончен” (конец ввода, end of input, end of file, EOF)
# Cntrl+l   - очистка экрана в терминале
# Ctrl+w    - (в конце слова) удалить слово целиком в терминале
# Ctrl+u    - удалить строку



puts '                                              Команды'

# Список и описание универсальных(по возможности) команд для PowerShell и Bash:

# тут > Первое что мы видим когда открываем терминал это путь до текущей директории


# 1.  pwd - команда показывает текущую директорию и путь к ней
# PowerShell              - gl, pwd
# cmd.exe/COMMAND.COM     - pwd
# Bash                    - cd


# 2.  cd - команда для перемещения по директориям:
# PowerShell              - cd, chdir, sl
# cmd.exe/COMMAND.COM     - cd, chdir
# Bash                    - cd

# > cd e:                            - переход на другой диск(тут диск E)
# > cd /d e:\doc                     - неинтуитивный переход на другой диск в cmd.exe/COMMAND.COM
# > cd ..                            - переходим на одну директорию вверх
# > cd имя_папки                     - переходим на одну директорию вниз в папку 'имя_папки'
# > cd имя_папки\имя_другой_папки    - переходим в папку 'имя_другой_папки' по относительному пути
# > cd ..\folder_name                - переход на директорию ур выше и переход в папку с нее


# 3.  ls - команда для вывода списка папок и фаилов.
# Если в 1м столбце первый символ это "d" - это директория, а если "-" - это фаил. Если в последнем столбце название начинается с точки значит это скрытый фаил или директория.
# PowerShell              - gci, dir, ls
# cmd.exe/COMMAND.COM     - dir
# Bash                    - ls

# > ls имя_папки                          - выведет список фаилов и папок в папке что находится в нашей директории
# > ls имя_папки\имя_папки_ниже           - выведет список фаилов и папок по относительному пути


# 4.  clear - очистить экран терминала
# PowerShell              - cls, clear
# cmd.exe/COMMAND.COM     - cls
# Bash                    - clear


# 5.  mkdir имя_директории - cоздать новую директорию в текущей директори
# PowerShell              -
# cmd.exe/COMMAND.COM     -
# Bash                    -

# > mkdir имя_1, имя_2, имя_3            - можно создавать одновременно множество директорий указывая их через запятую


# 6.  ren старое_имя новое_имя(в Bash нету, применяется mv) - переименовать директорию
# PowerShell              - mi, ren
# cmd.exe/COMMAND.COM     - ren, rename
# Bash                    - mv


# 7.  rm имя_объекта - удаление фаила или директории(через терминал все удаляется безвозвратно, нет корзины)
# PowerShell              - ri, del, erase, rmdir, rd, rm
# cmd.exe/COMMAND.COM     - del, erase, rmdir, rd
# Bash                    - rmdir, rm

# > rm имя_1, имя_2                      - удаление одновременно нескольких объектов

# > rm -rf /                             - !!! Эта команда удалит содержимое корневой директории на вашем диске без какого-либо подтверждения.


# 8.  man имя_команды - справка по указанной команде(аналог help) выйти из меню справки Ctrl+C
# PowerShell              - help, man
# cmd.exe/COMMAND.COM     - help
# Bash                    - man


# 9.  ni имя.расширение(в Bash другое) - создание нового фаила
# PowerShell              -
# cmd.exe/COMMAND.COM     -
# Bash                    -

# > ni папка\имя.расширение


# 10. cp имя_фаила.расширение имя_папки - копируем фаил или папку "имя_фаила" в папку "имя_папки"
# -r  –  recursive (recursive) — копировать каталоги рекурсивно (то есть все подкаталоги и все файлы в подкаталогах)
# PowerShell              - cpi, copy, cp
# cmd.exe/COMMAND.COM     - copy
# Bash                    - cp

# > cp index.html ..\folder_name                                  - копируем index.html в папку folder_name которая находится на директорию выше по относительному адресу
# > cp имя_фаила1.расширение, имя_фаила.расширение2 имя_папки     -  несколько фаилов
# > cp -r имя_папки1, имя_папки2 имя_папки                        -  копируем папки имя_папки1 и имя_папки2 и все их содержимое в папку имя_папки.


# 11. mv имя_фаила.расширение имя_папки - переместить(вырезать+копировать) фаил или папку "имя_фаила" в папку "имя_папки"
# (не нужен рекурсивный перенос, переносится с содержимым и так)
# PowerShell              - mi, move, mv
# cmd.exe/COMMAND.COM     - move
# Bash                    - mv

# > mv имя_фаила1.расширение, имя_фаила.расширение2 имя_папки         -  несколько фаилов


# 12. ps - список процессов(такой же как в диспетчере задач)
# PowerShell              - gps, ps
# cmd.exe/COMMAND.COM     - tlist, tasklist
# Bash                    - ps


# 13. kill айди_процесса(цифры) - остановить запущенный процесс
# PowerShell              - spps, kill
# cmd.exe/COMMAND.COM     - kill, taskkill
# Bash                    - kill


# 14. echo 'какойто текст' - выведет какойто текст(с кавычками строка, без кавычек массив)
# PowerShell               - echo, write
# cmd.exe/COMMAND.COM      - echo ??
# Bash                     - echo

# > echo %PATH%  (работает только в старом терминале винды) - показывает все пути переменных среды


# 15. cat путь\имя_фаила.расширение - открыть какойто фаил и вывести содержимое в терминал
# PowerShell              - gc, type, cat
# cmd.exe/COMMAND.COM     - type
# Bash                    - cat


# 16. Изменяет текущий каталог на тот, который был последним помещен в стек
# PowerShell              - popd
# cmd.exe/COMMAND.COM     - popd
# Bash                    - popd


# 17. Помещает текущий каталог в стек
# PowerShell              - pushd
# cmd.exe/COMMAND.COM     - pushd
# Bash                    - pushd


# 18. Установка значения/создание переменной
# PowerShell              - sv, set
# cmd.exe/COMMAND.COM     - set
# Bash                    - set


# 19. Выводит строки подходящие под условия
# PowerShell              - sls
# cmd.exe/COMMAND.COM     - find, findstr
# Bash                    - grep


# 20. Передает входные данные в фаил или переменную, затем передает их дальше по конвееру
# PowerShell              - tee
# cmd.exe/COMMAND.COM     - не существует
# Bash                    - tee



puts '                                  Скрипты Windows PowerShell'

# 1. Создаем фаил с расширением ps1 (либо создаем txt фаил и меняем ему расширение на ps1)

# 2. Открываем (например блокнотом) и пишем в нем любые команды (новые с новой строки так же как пишем их в терминале)

# Пример содержания скрипта(создаем папку в нее подпапки и фаилы):
# mkdir mySite,mySite\css,mySite\js,mySite\img
# ni mySite\index.html,mySite\css\style.css,mySite\css\media.css,mySite\js\main.js

# 3. Запускаем фаил(правая кнопка мыши -> выполнить с помощью PowerShell) и он выполняет команды PowerShell например создает нам набор необходимых папок и фаилов

















#
