puts '                              Языки со статической и динамической типизацией'

# Существует 2 вида языков: 1. С динамической типизацией; 2. Со статической типизацией;

# Руби - язык с динамической типизацией

# (Отличие явной-неявной и статической-динамической, в том что первое это указание типа переменных, а второе про использование, например пихание в массив ??)

# 1. Динамическая типизация - нужно меньше кода и программы более гибкие, но требуется большее покрытие тестами
# (на примере Руби):
def empty?(s) # Обределен метод который принимает объект любого типа
  return s.size == 0 # (будет работать для объекта любого типа у которого есть метод size)
end


# 2. Статическая типизация -
# (на примере Java):
public boolean isEmpty(String s) { # Для каждого типа объекта придется писать отдельный метод(тут принимает только параметры типа String) иначе программа даже не откомпилируется. И возвращается только тип boolean
  return s.length() == 0;
}


# 1. Сильная типизация, когда для преобразования типов нужно явно указывать их преобразование(как в Руби например to_i)
# 2. Слабая типизация, когда явно преобразовывать не нужно и как в ЖС складывать например строку с чемто получая строку

puts
# Легаси код - код унаследованный(чужой) от предыдущих разработчиков

# vanilla.js -  можно написать в резюмэ как шутку(на самом деле это просто js в виде псевдофрэймворка)

# если тип цены float то ее рекомендуется хранить в базе в минимальных величинах(в центах, копейках итд), но лучше decimal

# рефакторинг - улучшение кода, чтоб он выглядел лучше и понятнее для разработчика

# Валидация(validation) - обозначает проверку параметров. Например если отправлена форма с незаполненными полями

# scraping - область програмирования для парсинга информации

# Gow - набор юникс команд и программ для виндоус(есть на гитхаб) - можно установить. https://github.com/bmatzelle/gow
# grep - одна из таких програм. Фильтрует вывод в консоль по строкам в которых есть некие слова
# в консоли после имени фаила(через пробел) ставим символ перенаправления вывода(для след команды) через команду "|" # пр name.rb | grep aaa - например ищет строку с ааа в фаиле(полезно для подборщика)

# Инициализация (от англ. initialization, инициирование) — создание, активация, подготовка к работе, определение параметров

# application - (приложение)

# Чтобы Руби понимал русский язык в интерпритаторе. Руби, Мак и Линукс используют кодировку символов UTF-8, а консоль Винды cp866
# #encoding: cp866 - (не забываем двоеточие после энкодинг)при вводе этой строки в начале программы комментарием мы подсказываем Руби кодировку.
# Потом в Фаре нажимаем F8(чтобы на панели появилось ANCI вместо OEM) в самом фаиле, потом пишем русским
# cp866(code page 866)(также она может называться DOS кодировкой)

# С:\Projects\MyApp1>irb
# irb(main):001:0> x = "aaabbb"            (вводим любую строку и присваиваем ее значение в переменную)
# => "aaabbb"
# irb(main):002:0> x.methods               (переменная.methods)
# => [:<=>, :==, ..., :length, :size, ...] (получаем список всех операций, что можем делать со строкой)


# .. -- означают переход на уровень ввех(влево от слэша), переход производится клавишей enter

# папка/директория/folder/каталог - это все одно и тоже















#
