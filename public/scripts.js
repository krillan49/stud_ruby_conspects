// js фаил и должен находиться в папке public(можно сделать и отдельную подпапку)


// Фаил для jS скриптов создаем в папке public например script.js и подключаем так <script src="/script.js"></script>

// Джаваскрипт(и соотв jQuery) можно подключать не только в отдельном фаиле но и просто в теле тега на отдельной html странице
// <script type="text/javascript">alert('hello');</script>

// Можно(по аналогии с css фаилами) подключать несколько фаилов js, например для отдельных плагинов(готоых скриптов) можно просто подключить их отдельно в разных js фаилах не парясь о добавлении в один.


//                                               JS

// Комментарии в JS

// Фронтэнд js-код выпоняется прямо в браузере

alert('hello'); //  выведет текст 'alert hello' на экран. В браузере при подключении этого фаила 'hello' выведет в всплыв окне
// всплывающее окно alert каждый браузер выводит по разному. Кастомизировать его так что хз как.

// функция в джаваскрипт. function - аналог def в Руби
function name() {
  // тело функции
};

// функции из такого js фаила можно подключать в разные html если подключить фаил в эти html
function something() {
  alert('iam function from js file');
};
// В JS функция вызывается по хэндлеру/событию(обработчик) Примеры в javascript.html


// Переменная и фунция с переменной
var x = 1; // при перезагрузке страницы(соотв и при переходе на другие страницы) переменные инициализируются заново, те не сохраняются от станицы к странице(соотв счет начнется с 1 с каждой новой станицы)
function perx() {
  alert(x);    // будет вывадиться на страницу возрастающие цифры одна за одной(так получился счетчик кликов на кнопку)
  x = x + 1;
};


//                                                 localstorage

// window.localStorage - это объект html5, он позволяет сохранять данные локально. Те браузер пользователя будет хранить у себя в памяти(те на компе пользователя) данные о сайте в котором есть localstorage. При помощи спец инструметов мы можем смотреть эти данные в браузере пользователя и если нам нужно - отправлять их на сервер для обработки.

// Те например в инет магазине, когда пользователь работает с корзиной товаров, сервер с этим не взаимодействует и обращается к корзине когда пользователь делает определенное действие для этого

// Во многом похоже на куки(хром вроде даже считает это частью куки)

// Гуглхром ограничевает размер localstorage 5ю мегабайтами.

// Для сохранения значений между разными перезагруженными страницами и после закрытия браузера

// Это же можно сделать при помощи разных механизмов, но тут используем самый простой и надежный(localStorage) для примера. Он доступен в html5

// www.w3schools.com/html/html5_webstorage.asp    -    HTML5 Web Storage https
// https://habr.com/ru/articles/349164/   -   Почему не стоит использовать LocalStorage
// https://tproger.ru/articles/localstorage/   -   LocalStorage на пальцах
// https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage   -   window.localStorage - Web APIs | MDN


//  с точки зрения структуры данных localStorage это хэш
// var x = 1; - это уже не нужно
function localst() {
  // переменная заданная внутри метода, задается каждый раз заново
  var x = window.localStorage.getItem('score'); // это как x = hh['score'] в ruby. Получаем значение по ключу(название ключа можно придумать любое).  До определения(при самом первом нажатии) будет возвращать null.

  // x * 1 - чтобы преобразовать String в Int в JS. ('523' * 1 == 523)
  // Тк когда мы получаем переменную( из localStorage ?) она получается типа String. А в JS в отличие от Руби если сложить строку и число то сложатся как 2 строки('1' + 1 == '11')

  x = x * 1 + 1;

  window.localStorage.setItem('score', x); // это как hh['score'] = x в ruby. Передается 2 параметра 1й ключ, 2й значение.

  alert(x);
}
// Теперь данные о переменной x хранятся в памяти браузера пользователя и при следующем заходе на сайт(на любую страницу где вызывается этот метод, тк это общее значение для метода, соотв клики на разных страницах учитываются вместе) оно уже будет использоваться далее
// Чтобы обнулить счетчик можно просто изменить ключ, тогда и обнулится и останутся в localstorage данные о старом ??

// https://stackoverflow.com/questions/3138564/looping-through-localstorage-in-html5-and-javascript  Looping through localStorage in HTML5 and JavaScript(перебор элементов из localStorage)












//
